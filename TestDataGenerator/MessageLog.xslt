<?xml version="1.0" encoding="UTF-8"?>
<!--Designed and generated by Altova StyleVision Professional Edition 2011 sp1 - see http://www.altova.com/stylevision for more information.-->
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:clitype="clitype" xmlns:fn="http://www.w3.org/2005/xpath-functions" xmlns:iso4217="http://www.xbrl.org/2003/iso4217" xmlns:ix="http://www.xbrl.org/2008/inlineXBRL" xmlns:java="java" xmlns:link="http://www.xbrl.org/2003/linkbase" xmlns:xbrldi="http://xbrl.org/2006/xbrldi" xmlns:xbrli="http://www.xbrl.org/2003/instance" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:altova="http://www.altova.com" exclude-result-prefixes="clitype fn iso4217 ix java link xbrldi xbrli xlink xs xsi altova">
	<xsl:output version="4.0" method="html" indent="no" encoding="UTF-16" doctype-public="-//W3C//DTD HTML 4.01 Transitional//EN" doctype-system="http://www.w3.org/TR/html4/loose.dtd"/>
	<xsl:param name="SV_OutputFormat" select="'HTML'"/>
	<xsl:variable name="XML" select="/"/>
	<xsl:variable name="altova:nPxPerIn" select="96"/>
	<xsl:template match="/">
		<html>
			<head>
				<title>
					<xsl:text> </xsl:text>
				</title>
				<meta http-equiv="X-UA-Compatible" content="IE=7"/>
				<xsl:comment>[if IE]&gt;&lt;STYLE type=&quot;text/css&quot;&gt;.altova-rotate-left-textbox{filter: progid:DXImageTransform.Microsoft.BasicImage(rotation=3)} .altova-rotate-right-textbox{filter: progid:DXImageTransform.Microsoft.BasicImage(rotation=1)} &lt;/STYLE&gt;&lt;![endif]</xsl:comment>
				<xsl:comment>[if !IE]&gt;&lt;!</xsl:comment>
				<style type="text/css">.altova-rotate-left-textbox{-webkit-transform: rotate(-90deg) translate(-100%, 0%); -webkit-transform-origin: 0% 0%;-moz-transform: rotate(-90deg) translate(-100%, 0%); -moz-transform-origin: 0% 0%}.altova-rotate-right-textbox{-webkit-transform: rotate(90deg) translate(0%, -100%); -webkit-transform-origin: 0% 0%;-moz-transform: rotate(90deg) translate(0%, -100%); -moz-transform-origin: 0% 0%}</style>
				<xsl:comment>&lt;![endif]</xsl:comment>
				<style type="text/css">@page { margin-left:0.60in; margin-right:0.60in; margin-top:0.79in; margin-bottom:0.79in } @media print { br.altova-page-break { page-break-before: always; } }</style>
			</head>
			<body>
				<xsl:for-each select="$XML">
					<br/>
					<xsl:for-each select="root">
						<br/>
						<a>
							<xsl:attribute name="name">
								<xsl:value-of select="&apos;top&apos;"/>
							</xsl:attribute>
						</a>
						<br/>
						<ul>
							<li>
								<a>
									<xsl:choose>
										<xsl:when test="substring(string(&apos;#errors&apos;), 1, 1) = '#'">
											<xsl:attribute name="href">
												<xsl:value-of select="&apos;#errors&apos;"/>
											</xsl:attribute>
										</xsl:when>
										<xsl:otherwise>
											<xsl:attribute name="href">
												<xsl:if test="substring(string(&apos;#errors&apos;), 2, 1) = ':'">
													<xsl:text>file:///</xsl:text>
												</xsl:if>
												<xsl:value-of select="translate(string(&apos;#errors&apos;), '&#x5c;', '/')"/>
											</xsl:attribute>
										</xsl:otherwise>
									</xsl:choose>
									<span>
										<xsl:text>Errors (</xsl:text>
									</span>
									<span>
										<xsl:value-of select="count(message[@severity=&apos;Error&apos;])"/>
									</span>
									<span>
										<xsl:text>)</xsl:text>
									</span>
								</a>
							</li>
							<li>
								<a>
									<xsl:choose>
										<xsl:when test="substring(string(&apos;#warnings&apos;), 1, 1) = '#'">
											<xsl:attribute name="href">
												<xsl:value-of select="&apos;#warnings&apos;"/>
											</xsl:attribute>
										</xsl:when>
										<xsl:otherwise>
											<xsl:attribute name="href">
												<xsl:if test="substring(string(&apos;#warnings&apos;), 2, 1) = ':'">
													<xsl:text>file:///</xsl:text>
												</xsl:if>
												<xsl:value-of select="translate(string(&apos;#warnings&apos;), '&#x5c;', '/')"/>
											</xsl:attribute>
										</xsl:otherwise>
									</xsl:choose>
									<span>
										<xsl:text>Warnings (</xsl:text>
									</span>
									<span>
										<xsl:value-of select="count(message[@severity=&apos;Warning&apos;])"/>
									</span>
									<span>
										<xsl:text>)</xsl:text>
									</span>
								</a>
							</li>
							<li>
								<a>
									<xsl:choose>
										<xsl:when test="substring(string(&apos;#information&apos;), 1, 1) = '#'">
											<xsl:attribute name="href">
												<xsl:value-of select="&apos;#information&apos;"/>
											</xsl:attribute>
										</xsl:when>
										<xsl:otherwise>
											<xsl:attribute name="href">
												<xsl:if test="substring(string(&apos;#information&apos;), 2, 1) = ':'">
													<xsl:text>file:///</xsl:text>
												</xsl:if>
												<xsl:value-of select="translate(string(&apos;#information&apos;), '&#x5c;', '/')"/>
											</xsl:attribute>
										</xsl:otherwise>
									</xsl:choose>
									<span>
										<xsl:text>Information (</xsl:text>
									</span>
									<span>
										<xsl:value-of select="count(message[@severity=&apos;Information&apos;])"/>
									</span>
									<span>
										<xsl:text>)</xsl:text>
									</span>
								</a>
							</li>
							<li>
								<a>
									<xsl:choose>
										<xsl:when test="substring(string(&apos;#schema_validation&apos;), 1, 1) = '#'">
											<xsl:attribute name="href">
												<xsl:value-of select="&apos;#schema_validation&apos;"/>
											</xsl:attribute>
										</xsl:when>
										<xsl:otherwise>
											<xsl:attribute name="href">
												<xsl:if test="substring(string(&apos;#schema_validation&apos;), 2, 1) = ':'">
													<xsl:text>file:///</xsl:text>
												</xsl:if>
												<xsl:value-of select="translate(string(&apos;#schema_validation&apos;), '&#x5c;', '/')"/>
											</xsl:attribute>
										</xsl:otherwise>
									</xsl:choose>
									<span>
										<xsl:text>Schema Validation (</xsl:text>
									</span>
									<span>
										<xsl:value-of select="count(message[@type=&apos;Schema Validation&apos;])"/>
									</span>
									<span>
										<xsl:text>)</xsl:text>
									</span>
								</a>
							</li>
							<li>
								<a>
									<xsl:choose>
										<xsl:when test="substring(string(&apos;#content_validation&apos;), 1, 1) = '#'">
											<xsl:attribute name="href">
												<xsl:value-of select="&apos;#content_validation&apos;"/>
											</xsl:attribute>
										</xsl:when>
										<xsl:otherwise>
											<xsl:attribute name="href">
												<xsl:if test="substring(string(&apos;#content_validation&apos;), 2, 1) = ':'">
													<xsl:text>file:///</xsl:text>
												</xsl:if>
												<xsl:value-of select="translate(string(&apos;#content_validation&apos;), '&#x5c;', '/')"/>
											</xsl:attribute>
										</xsl:otherwise>
									</xsl:choose>
									<span>
										<xsl:text>Content Validation (</xsl:text>
									</span>
									<span>
										<xsl:value-of select="count(message[@type=&apos;Content Validation&apos;])"/>
									</span>
									<span>
										<xsl:text>)</xsl:text>
									</span>
								</a>
							</li>
							<li>
								<a>
									<xsl:choose>
										<xsl:when test="substring(string(&apos;#generation&apos;), 1, 1) = '#'">
											<xsl:attribute name="href">
												<xsl:value-of select="&apos;#generation&apos;"/>
											</xsl:attribute>
										</xsl:when>
										<xsl:otherwise>
											<xsl:attribute name="href">
												<xsl:if test="substring(string(&apos;#generation&apos;), 2, 1) = ':'">
													<xsl:text>file:///</xsl:text>
												</xsl:if>
												<xsl:value-of select="translate(string(&apos;#generation&apos;), '&#x5c;', '/')"/>
											</xsl:attribute>
										</xsl:otherwise>
									</xsl:choose>
									<span>
										<xsl:text>Generation (</xsl:text>
									</span>
									<span>
										<xsl:value-of select="count(message[@type=&apos;Generation&apos;])"/>
									</span>
									<span>
										<xsl:text>)</xsl:text>
									</span>
								</a>
							</li>
							<li>
								<a>
									<xsl:choose>
										<xsl:when test="substring(string(&apos;#all&apos;), 1, 1) = '#'">
											<xsl:attribute name="href">
												<xsl:value-of select="&apos;#all&apos;"/>
											</xsl:attribute>
										</xsl:when>
										<xsl:otherwise>
											<xsl:attribute name="href">
												<xsl:if test="substring(string(&apos;#all&apos;), 2, 1) = ':'">
													<xsl:text>file:///</xsl:text>
												</xsl:if>
												<xsl:value-of select="translate(string(&apos;#all&apos;), '&#x5c;', '/')"/>
											</xsl:attribute>
										</xsl:otherwise>
									</xsl:choose>
									<span>
										<xsl:text>All (</xsl:text>
									</span>
									<span>
										<xsl:value-of select="count(message)"/>
									</span>
									<span>
										<xsl:text>)</xsl:text>
									</span>
								</a>
							</li>
						</ul>
						<br/>
						<h1>
							<span>
								<xsl:text>Message Log (</xsl:text>
							</span>
							<xsl:for-each select="@date">
								<span>
									<xsl:value-of select="string(.)"/>
								</span>
							</xsl:for-each>
							<span>
								<xsl:text>)</xsl:text>
							</span>
						</h1>
						<h2>
							<a>
								<xsl:attribute name="name">
									<xsl:value-of select="&apos;errors&apos;"/>
								</xsl:attribute>
								<span>
									<xsl:text>Severity: Errors</xsl:text>
								</span>
							</a>
						</h2>
						<table border="1">
							<xsl:variable name="altova:CurrContextGrid_09B69DF8" select="."/>
							<thead>
								<tr>
									<th>
										<span>
											<xsl:text>type</xsl:text>
										</span>
									</th>
									<th>
										<span>
											<xsl:text>time</xsl:text>
										</span>
									</th>
									<th>
										<span>
											<xsl:text>message</xsl:text>
										</span>
									</th>
									<th>
										<span>
											<xsl:text>file</xsl:text>
										</span>
									</th>
								</tr>
							</thead>
							<tbody>
								<xsl:for-each select="message[@severity=&apos;Error&apos;]">
									<tr>
										<td>
											<xsl:for-each select="@type">
												<span>
													<xsl:value-of select="string(.)"/>
												</span>
											</xsl:for-each>
										</td>
										<td>
											<xsl:for-each select="@time">
												<span>
													<xsl:value-of select="string(.)"/>
												</span>
											</xsl:for-each>
										</td>
										<td>
											<xsl:for-each select="@message">
												<span>
													<xsl:value-of select="string(.)"/>
												</span>
											</xsl:for-each>
										</td>
										<td>
											<xsl:for-each select="@file">
												<span>
													<xsl:value-of select="string(.)"/>
												</span>
											</xsl:for-each>
										</td>
									</tr>
								</xsl:for-each>
							</tbody>
						</table>
						<a>
							<xsl:choose>
								<xsl:when test="substring(string(&apos;#top&apos;), 1, 1) = '#'">
									<xsl:attribute name="href">
										<xsl:value-of select="&apos;#top&apos;"/>
									</xsl:attribute>
								</xsl:when>
								<xsl:otherwise>
									<xsl:attribute name="href">
										<xsl:if test="substring(string(&apos;#top&apos;), 2, 1) = ':'">
											<xsl:text>file:///</xsl:text>
										</xsl:if>
										<xsl:value-of select="translate(string(&apos;#top&apos;), '&#x5c;', '/')"/>
									</xsl:attribute>
								</xsl:otherwise>
							</xsl:choose>
							<span>
								<xsl:text>Top</xsl:text>
							</span>
						</a>
						<br/>
						<h2>
							<a>
								<xsl:attribute name="name">
									<xsl:value-of select="&apos;warnings&apos;"/>
								</xsl:attribute>
								<span>
									<xsl:text>Severity: Warnings</xsl:text>
								</span>
							</a>
						</h2>
						<table border="1">
							<xsl:variable name="altova:CurrContextGrid_09B69738" select="."/>
							<thead>
								<tr>
									<th>
										<span>
											<xsl:text>type</xsl:text>
										</span>
									</th>
									<th>
										<span>
											<xsl:text>time</xsl:text>
										</span>
									</th>
									<th>
										<span>
											<xsl:text>message</xsl:text>
										</span>
									</th>
									<th>
										<span>
											<xsl:text>file</xsl:text>
										</span>
									</th>
								</tr>
							</thead>
							<tbody>
								<xsl:for-each select="message[@severity=&apos;Warning&apos;]">
									<tr>
										<td>
											<xsl:for-each select="@type">
												<span>
													<xsl:value-of select="string(.)"/>
												</span>
											</xsl:for-each>
										</td>
										<td>
											<xsl:for-each select="@time">
												<span>
													<xsl:value-of select="string(.)"/>
												</span>
											</xsl:for-each>
										</td>
										<td>
											<xsl:for-each select="@message">
												<span>
													<xsl:value-of select="string(.)"/>
												</span>
											</xsl:for-each>
										</td>
										<td>
											<xsl:for-each select="@file">
												<span>
													<xsl:value-of select="string(.)"/>
												</span>
											</xsl:for-each>
										</td>
									</tr>
								</xsl:for-each>
							</tbody>
						</table>
						<a>
							<xsl:choose>
								<xsl:when test="substring(string(&apos;#top&apos;), 1, 1) = '#'">
									<xsl:attribute name="href">
										<xsl:value-of select="&apos;#top&apos;"/>
									</xsl:attribute>
								</xsl:when>
								<xsl:otherwise>
									<xsl:attribute name="href">
										<xsl:if test="substring(string(&apos;#top&apos;), 2, 1) = ':'">
											<xsl:text>file:///</xsl:text>
										</xsl:if>
										<xsl:value-of select="translate(string(&apos;#top&apos;), '&#x5c;', '/')"/>
									</xsl:attribute>
								</xsl:otherwise>
							</xsl:choose>
							<span>
								<xsl:text>Top</xsl:text>
							</span>
						</a>
						<br/>
						<h2>
							<a>
								<xsl:attribute name="name">
									<xsl:value-of select="&apos;information&apos;"/>
								</xsl:attribute>
								<span>
									<xsl:text>Severity: Information</xsl:text>
								</span>
							</a>
						</h2>
						<table border="1">
							<xsl:variable name="altova:CurrContextGrid_068D6070" select="."/>
							<thead>
								<tr>
									<th>
										<span>
											<xsl:text>type</xsl:text>
										</span>
									</th>
									<th>
										<span>
											<xsl:text>time</xsl:text>
										</span>
									</th>
									<th>
										<span>
											<xsl:text>message</xsl:text>
										</span>
									</th>
									<th>
										<span>
											<xsl:text>file</xsl:text>
										</span>
									</th>
								</tr>
							</thead>
							<tbody>
								<xsl:for-each select="message[@severity=&apos;Information&apos;]">
									<tr>
										<td>
											<xsl:for-each select="@type">
												<span>
													<xsl:value-of select="string(.)"/>
												</span>
											</xsl:for-each>
										</td>
										<td>
											<xsl:for-each select="@time">
												<span>
													<xsl:value-of select="string(.)"/>
												</span>
											</xsl:for-each>
										</td>
										<td>
											<xsl:for-each select="@message">
												<span>
													<xsl:value-of select="string(.)"/>
												</span>
											</xsl:for-each>
										</td>
										<td>
											<xsl:for-each select="@file">
												<span>
													<xsl:value-of select="string(.)"/>
												</span>
											</xsl:for-each>
										</td>
									</tr>
								</xsl:for-each>
							</tbody>
						</table>
						<a>
							<xsl:choose>
								<xsl:when test="substring(string(&apos;#top&apos;), 1, 1) = '#'">
									<xsl:attribute name="href">
										<xsl:value-of select="&apos;#top&apos;"/>
									</xsl:attribute>
								</xsl:when>
								<xsl:otherwise>
									<xsl:attribute name="href">
										<xsl:if test="substring(string(&apos;#top&apos;), 2, 1) = ':'">
											<xsl:text>file:///</xsl:text>
										</xsl:if>
										<xsl:value-of select="translate(string(&apos;#top&apos;), '&#x5c;', '/')"/>
									</xsl:attribute>
								</xsl:otherwise>
							</xsl:choose>
							<span>
								<xsl:text>Top</xsl:text>
							</span>
						</a>
						<br/>
						<h2>
							<a>
								<xsl:attribute name="name">
									<xsl:value-of select="&apos;schema_validation&apos;"/>
								</xsl:attribute>
								<span>
									<xsl:text>Type: Schema Validation</xsl:text>
								</span>
							</a>
						</h2>
						<table border="1">
							<xsl:variable name="altova:CurrContextGrid_09DF9138" select="."/>
							<thead>
								<tr>
									<th>
										<span>
											<xsl:text>severity</xsl:text>
										</span>
									</th>
									<th>
										<span>
											<xsl:text>time</xsl:text>
										</span>
									</th>
									<th>
										<span>
											<xsl:text>message</xsl:text>
										</span>
									</th>
									<th>
										<span>
											<xsl:text>file</xsl:text>
										</span>
									</th>
									<th>
										<span>
											<xsl:text>line</xsl:text>
										</span>
									</th>
									<th>
										<span>
											<xsl:text>position</xsl:text>
										</span>
									</th>
								</tr>
							</thead>
							<tbody>
								<xsl:for-each select="message[@type=&apos;Schema Validation&apos;]">
									<tr>
										<td>
											<xsl:for-each select="@severity">
												<span>
													<xsl:value-of select="string(.)"/>
												</span>
											</xsl:for-each>
										</td>
										<td>
											<xsl:for-each select="@time">
												<span>
													<xsl:value-of select="string(.)"/>
												</span>
											</xsl:for-each>
										</td>
										<td>
											<xsl:for-each select="@message">
												<span>
													<xsl:value-of select="string(.)"/>
												</span>
											</xsl:for-each>
										</td>
										<td>
											<xsl:for-each select="@file">
												<span>
													<xsl:value-of select="string(.)"/>
												</span>
											</xsl:for-each>
										</td>
										<td>
											<xsl:for-each select="location">
												<xsl:for-each select="@line">
													<span>
														<xsl:value-of select="string(.)"/>
													</span>
												</xsl:for-each>
											</xsl:for-each>
										</td>
										<td>
											<xsl:for-each select="location">
												<xsl:for-each select="@position">
													<span>
														<xsl:value-of select="string(.)"/>
													</span>
												</xsl:for-each>
											</xsl:for-each>
										</td>
									</tr>
								</xsl:for-each>
							</tbody>
						</table>
						<a>
							<xsl:choose>
								<xsl:when test="substring(string(&apos;#top&apos;), 1, 1) = '#'">
									<xsl:attribute name="href">
										<xsl:value-of select="&apos;#top&apos;"/>
									</xsl:attribute>
								</xsl:when>
								<xsl:otherwise>
									<xsl:attribute name="href">
										<xsl:if test="substring(string(&apos;#top&apos;), 2, 1) = ':'">
											<xsl:text>file:///</xsl:text>
										</xsl:if>
										<xsl:value-of select="translate(string(&apos;#top&apos;), '&#x5c;', '/')"/>
									</xsl:attribute>
								</xsl:otherwise>
							</xsl:choose>
							<span>
								<xsl:text>Top</xsl:text>
							</span>
						</a>
						<br/>
						<h2>
							<a>
								<xsl:attribute name="name">
									<xsl:value-of select="&apos;content_validation&apos;"/>
								</xsl:attribute>
								<span>
									<xsl:text>Type: Content Validation</xsl:text>
								</span>
							</a>
						</h2>
						<table border="1">
							<xsl:variable name="altova:CurrContextGrid_09DF9BB8" select="."/>
							<thead>
								<tr>
									<th>
										<span>
											<xsl:text>severity</xsl:text>
										</span>
									</th>
									<th>
										<span>
											<xsl:text>time</xsl:text>
										</span>
									</th>
									<th>
										<span>
											<xsl:text>message</xsl:text>
										</span>
									</th>
									<th>
										<span>
											<xsl:text>file</xsl:text>
										</span>
									</th>
									<th>
										<span>
											<xsl:text>context</xsl:text>
										</span>
									</th>
									<th>
										<span>
											<xsl:text>test</xsl:text>
										</span>
									</th>
								</tr>
							</thead>
							<tbody>
								<xsl:for-each select="message[@type=&apos;Content Validation&apos;]">
									<tr>
										<td>
											<xsl:for-each select="@severity">
												<span>
													<xsl:value-of select="string(.)"/>
												</span>
											</xsl:for-each>
										</td>
										<td>
											<xsl:for-each select="@time">
												<span>
													<xsl:value-of select="string(.)"/>
												</span>
											</xsl:for-each>
										</td>
										<td>
											<xsl:for-each select="@message">
												<span>
													<xsl:value-of select="string(.)"/>
												</span>
											</xsl:for-each>
										</td>
										<td>
											<xsl:for-each select="@file">
												<span>
													<xsl:value-of select="string(.)"/>
												</span>
											</xsl:for-each>
										</td>
										<td>
											<xsl:for-each select="context">
												<xsl:apply-templates/>
											</xsl:for-each>
										</td>
										<td>
											<xsl:for-each select="test">
												<xsl:apply-templates/>
											</xsl:for-each>
										</td>
									</tr>
								</xsl:for-each>
							</tbody>
						</table>
						<a>
							<xsl:choose>
								<xsl:when test="substring(string(&apos;#top&apos;), 1, 1) = '#'">
									<xsl:attribute name="href">
										<xsl:value-of select="&apos;#top&apos;"/>
									</xsl:attribute>
								</xsl:when>
								<xsl:otherwise>
									<xsl:attribute name="href">
										<xsl:if test="substring(string(&apos;#top&apos;), 2, 1) = ':'">
											<xsl:text>file:///</xsl:text>
										</xsl:if>
										<xsl:value-of select="translate(string(&apos;#top&apos;), '&#x5c;', '/')"/>
									</xsl:attribute>
								</xsl:otherwise>
							</xsl:choose>
							<span>
								<xsl:text>Top</xsl:text>
							</span>
						</a>
						<br/>
						<h2>
							<a>
								<xsl:attribute name="name">
									<xsl:value-of select="&apos;generation&apos;"/>
								</xsl:attribute>
								<span>
									<xsl:text>Type: Generation</xsl:text>
								</span>
							</a>
						</h2>
						<table border="1">
							<xsl:variable name="altova:CurrContextGrid_09DFA638" select="."/>
							<thead>
								<tr>
									<th>
										<span>
											<xsl:text>severity</xsl:text>
										</span>
									</th>
									<th>
										<span>
											<xsl:text>time</xsl:text>
										</span>
									</th>
									<th>
										<span>
											<xsl:text>message</xsl:text>
										</span>
									</th>
									<th>
										<span>
											<xsl:text>file</xsl:text>
										</span>
									</th>
								</tr>
							</thead>
							<tbody>
								<xsl:for-each select="message[@type=&apos;Generation&apos;]">
									<tr>
										<td>
											<xsl:for-each select="@severity">
												<span>
													<xsl:value-of select="string(.)"/>
												</span>
											</xsl:for-each>
										</td>
										<td>
											<xsl:for-each select="@time">
												<span>
													<xsl:value-of select="string(.)"/>
												</span>
											</xsl:for-each>
										</td>
										<td>
											<xsl:for-each select="@message">
												<span>
													<xsl:value-of select="string(.)"/>
												</span>
											</xsl:for-each>
										</td>
										<td>
											<xsl:for-each select="@file">
												<span>
													<xsl:value-of select="string(.)"/>
												</span>
											</xsl:for-each>
										</td>
									</tr>
								</xsl:for-each>
							</tbody>
						</table>
						<a>
							<xsl:choose>
								<xsl:when test="substring(string(&apos;#top&apos;), 1, 1) = '#'">
									<xsl:attribute name="href">
										<xsl:value-of select="&apos;#top&apos;"/>
									</xsl:attribute>
								</xsl:when>
								<xsl:otherwise>
									<xsl:attribute name="href">
										<xsl:if test="substring(string(&apos;#top&apos;), 2, 1) = ':'">
											<xsl:text>file:///</xsl:text>
										</xsl:if>
										<xsl:value-of select="translate(string(&apos;#top&apos;), '&#x5c;', '/')"/>
									</xsl:attribute>
								</xsl:otherwise>
							</xsl:choose>
							<span>
								<xsl:text>Top</xsl:text>
							</span>
						</a>
						<br/>
						<h2>
							<a>
								<xsl:attribute name="name">
									<xsl:value-of select="&apos;all&apos;"/>
								</xsl:attribute>
								<span>
									<xsl:text>All</xsl:text>
								</span>
							</a>
						</h2>
						<table border="1">
							<xsl:variable name="altova:CurrContextGrid_09DFAD58" select="."/>
							<thead>
								<tr>
									<th>
										<span>
											<xsl:text>severity</xsl:text>
										</span>
									</th>
									<th>
										<span>
											<xsl:text>type</xsl:text>
										</span>
									</th>
									<th>
										<span>
											<xsl:text>time</xsl:text>
										</span>
									</th>
									<th>
										<span>
											<xsl:text>message</xsl:text>
										</span>
									</th>
									<th>
										<span>
											<xsl:text>file</xsl:text>
										</span>
									</th>
								</tr>
							</thead>
							<tbody>
								<xsl:for-each select="message">
									<tr style="height:0.20in; ">
										<td>
											<xsl:for-each select="@severity">
												<span>
													<xsl:value-of select="string(.)"/>
												</span>
											</xsl:for-each>
										</td>
										<td>
											<xsl:for-each select="@type">
												<span>
													<xsl:value-of select="string(.)"/>
												</span>
											</xsl:for-each>
										</td>
										<td>
											<xsl:for-each select="@time">
												<span>
													<xsl:value-of select="string(.)"/>
												</span>
											</xsl:for-each>
										</td>
										<td>
											<xsl:for-each select="@message">
												<span>
													<xsl:value-of select="string(.)"/>
												</span>
											</xsl:for-each>
										</td>
										<td>
											<xsl:for-each select="@file">
												<span>
													<xsl:value-of select="string(.)"/>
												</span>
											</xsl:for-each>
										</td>
									</tr>
								</xsl:for-each>
							</tbody>
						</table>
						<a>
							<xsl:choose>
								<xsl:when test="substring(string(&apos;#top&apos;), 1, 1) = '#'">
									<xsl:attribute name="href">
										<xsl:value-of select="&apos;#top&apos;"/>
									</xsl:attribute>
								</xsl:when>
								<xsl:otherwise>
									<xsl:attribute name="href">
										<xsl:if test="substring(string(&apos;#top&apos;), 2, 1) = ':'">
											<xsl:text>file:///</xsl:text>
										</xsl:if>
										<xsl:value-of select="translate(string(&apos;#top&apos;), '&#x5c;', '/')"/>
									</xsl:attribute>
								</xsl:otherwise>
							</xsl:choose>
							<span>
								<xsl:text>Top</xsl:text>
							</span>
						</a>
						<br/>
					</xsl:for-each>
					<br/>
				</xsl:for-each>
			</body>
		</html>
	</xsl:template>
</xsl:stylesheet>
